//
// Copyright 2023 Pixar
//
// Licensed under the terms set forth in the LICENSE.txt file available at
// https://openusd.org/license.
//
////////////////////////////////////////////////////////////////////////

/* ************************************************************************** */
/* **                                                                      ** */
/* ** This file is generated by a script.                                  ** */
/* **                                                                      ** */
/* ** Do not edit it directly (unless it is within a CUSTOM CODE section)! ** */
/* ** Edit hdSchemaDefs.py instead to make changes.                        ** */
/* **                                                                      ** */
/* ************************************************************************** */

#include "pxr/imaging/fabric/physxVehicleWheelAttachmentSchema.h"

#include "pxr/imaging/hd/retainedDataSource.h"

#include "pxr/base/trace/trace.h"

// --(BEGIN CUSTOM CODE: Includes)--
// --(END CUSTOM CODE: Includes)--

PXR_NAMESPACE_OPEN_SCOPE

TF_DEFINE_PUBLIC_TOKENS(FabricPhysxVehicleWheelAttachmentSchemaTokens,
    FABRIC_PHYSX_VEHICLE_WHEEL_ATTACHMENT_SCHEMA_TOKENS);

// --(BEGIN CUSTOM CODE: Schema Methods)--
// --(END CUSTOM CODE: Schema Methods)--

HdIntDataSourceHandle
FabricPhysxVehicleWheelAttachmentSchema::GetIndex() const
{
    return _GetTypedDataSource<HdIntDataSource>(
        FabricPhysxVehicleWheelAttachmentSchemaTokens->index);
}

HdQuatfDataSourceHandle
FabricPhysxVehicleWheelAttachmentSchema::GetSuspensionFrameOrientation() const
{
    return _GetTypedDataSource<HdQuatfDataSource>(
        FabricPhysxVehicleWheelAttachmentSchemaTokens->suspensionFrameOrientation);
}

HdVec3fDataSourceHandle
FabricPhysxVehicleWheelAttachmentSchema::GetSuspensionFramePosition() const
{
    return _GetTypedDataSource<HdVec3fDataSource>(
        FabricPhysxVehicleWheelAttachmentSchemaTokens->suspensionFramePosition);
}

HdVec3fDataSourceHandle
FabricPhysxVehicleWheelAttachmentSchema::GetSuspensionTravelDirection() const
{
    return _GetTypedDataSource<HdVec3fDataSource>(
        FabricPhysxVehicleWheelAttachmentSchemaTokens->suspensionTravelDirection);
}

HdQuatfDataSourceHandle
FabricPhysxVehicleWheelAttachmentSchema::GetWheelFrameOrientation() const
{
    return _GetTypedDataSource<HdQuatfDataSource>(
        FabricPhysxVehicleWheelAttachmentSchemaTokens->wheelFrameOrientation);
}

HdVec3fDataSourceHandle
FabricPhysxVehicleWheelAttachmentSchema::GetWheelFramePosition() const
{
    return _GetTypedDataSource<HdVec3fDataSource>(
        FabricPhysxVehicleWheelAttachmentSchemaTokens->wheelFramePosition);
}

/*static*/
HdContainerDataSourceHandle
FabricPhysxVehicleWheelAttachmentSchema::BuildRetained(
        const HdIntDataSourceHandle &index,
        const HdQuatfDataSourceHandle &suspensionFrameOrientation,
        const HdVec3fDataSourceHandle &suspensionFramePosition,
        const HdVec3fDataSourceHandle &suspensionTravelDirection,
        const HdQuatfDataSourceHandle &wheelFrameOrientation,
        const HdVec3fDataSourceHandle &wheelFramePosition
)
{
    TfToken _names[6];
    HdDataSourceBaseHandle _values[6];

    size_t _count = 0;

    if (index) {
        _names[_count] = FabricPhysxVehicleWheelAttachmentSchemaTokens->index;
        _values[_count++] = index;
    }

    if (suspensionFrameOrientation) {
        _names[_count] = FabricPhysxVehicleWheelAttachmentSchemaTokens->suspensionFrameOrientation;
        _values[_count++] = suspensionFrameOrientation;
    }

    if (suspensionFramePosition) {
        _names[_count] = FabricPhysxVehicleWheelAttachmentSchemaTokens->suspensionFramePosition;
        _values[_count++] = suspensionFramePosition;
    }

    if (suspensionTravelDirection) {
        _names[_count] = FabricPhysxVehicleWheelAttachmentSchemaTokens->suspensionTravelDirection;
        _values[_count++] = suspensionTravelDirection;
    }

    if (wheelFrameOrientation) {
        _names[_count] = FabricPhysxVehicleWheelAttachmentSchemaTokens->wheelFrameOrientation;
        _values[_count++] = wheelFrameOrientation;
    }

    if (wheelFramePosition) {
        _names[_count] = FabricPhysxVehicleWheelAttachmentSchemaTokens->wheelFramePosition;
        _values[_count++] = wheelFramePosition;
    }
    return HdRetainedContainerDataSource::New(_count, _names, _values);
}

FabricPhysxVehicleWheelAttachmentSchema::Builder &
FabricPhysxVehicleWheelAttachmentSchema::Builder::SetIndex(
    const HdIntDataSourceHandle &index)
{
    _index = index;
    return *this;
}

FabricPhysxVehicleWheelAttachmentSchema::Builder &
FabricPhysxVehicleWheelAttachmentSchema::Builder::SetSuspensionFrameOrientation(
    const HdQuatfDataSourceHandle &suspensionFrameOrientation)
{
    _suspensionFrameOrientation = suspensionFrameOrientation;
    return *this;
}

FabricPhysxVehicleWheelAttachmentSchema::Builder &
FabricPhysxVehicleWheelAttachmentSchema::Builder::SetSuspensionFramePosition(
    const HdVec3fDataSourceHandle &suspensionFramePosition)
{
    _suspensionFramePosition = suspensionFramePosition;
    return *this;
}

FabricPhysxVehicleWheelAttachmentSchema::Builder &
FabricPhysxVehicleWheelAttachmentSchema::Builder::SetSuspensionTravelDirection(
    const HdVec3fDataSourceHandle &suspensionTravelDirection)
{
    _suspensionTravelDirection = suspensionTravelDirection;
    return *this;
}

FabricPhysxVehicleWheelAttachmentSchema::Builder &
FabricPhysxVehicleWheelAttachmentSchema::Builder::SetWheelFrameOrientation(
    const HdQuatfDataSourceHandle &wheelFrameOrientation)
{
    _wheelFrameOrientation = wheelFrameOrientation;
    return *this;
}

FabricPhysxVehicleWheelAttachmentSchema::Builder &
FabricPhysxVehicleWheelAttachmentSchema::Builder::SetWheelFramePosition(
    const HdVec3fDataSourceHandle &wheelFramePosition)
{
    _wheelFramePosition = wheelFramePosition;
    return *this;
}

HdContainerDataSourceHandle
FabricPhysxVehicleWheelAttachmentSchema::Builder::Build()
{
    return FabricPhysxVehicleWheelAttachmentSchema::BuildRetained(
        _index,
        _suspensionFrameOrientation,
        _suspensionFramePosition,
        _suspensionTravelDirection,
        _wheelFrameOrientation,
        _wheelFramePosition
    );
}

/*static*/
FabricPhysxVehicleWheelAttachmentSchema
FabricPhysxVehicleWheelAttachmentSchema::GetFromParent(
        const HdContainerDataSourceHandle &fromParentContainer)
{
    return FabricPhysxVehicleWheelAttachmentSchema(
        fromParentContainer
        ? HdContainerDataSource::Cast(fromParentContainer->Get(
                FabricPhysxVehicleWheelAttachmentSchemaTokens->physxVehicleWheelAttachment))
        : nullptr);
}

/*static*/
const TfToken &
FabricPhysxVehicleWheelAttachmentSchema::GetSchemaToken()
{
    return FabricPhysxVehicleWheelAttachmentSchemaTokens->physxVehicleWheelAttachment;
}

/*static*/
const HdDataSourceLocator &
FabricPhysxVehicleWheelAttachmentSchema::GetDefaultLocator()
{
    static const HdDataSourceLocator locator(GetSchemaToken());
    return locator;
}

/* static */
const HdDataSourceLocator &
FabricPhysxVehicleWheelAttachmentSchema::GetIndexLocator()
{
    static const HdDataSourceLocator locator =
        GetDefaultLocator().Append(
            FabricPhysxVehicleWheelAttachmentSchemaTokens->index);
    return locator;
}

/* static */
const HdDataSourceLocator &
FabricPhysxVehicleWheelAttachmentSchema::GetSuspensionFrameOrientationLocator()
{
    static const HdDataSourceLocator locator =
        GetDefaultLocator().Append(
            FabricPhysxVehicleWheelAttachmentSchemaTokens->suspensionFrameOrientation);
    return locator;
}

/* static */
const HdDataSourceLocator &
FabricPhysxVehicleWheelAttachmentSchema::GetSuspensionFramePositionLocator()
{
    static const HdDataSourceLocator locator =
        GetDefaultLocator().Append(
            FabricPhysxVehicleWheelAttachmentSchemaTokens->suspensionFramePosition);
    return locator;
}

/* static */
const HdDataSourceLocator &
FabricPhysxVehicleWheelAttachmentSchema::GetSuspensionTravelDirectionLocator()
{
    static const HdDataSourceLocator locator =
        GetDefaultLocator().Append(
            FabricPhysxVehicleWheelAttachmentSchemaTokens->suspensionTravelDirection);
    return locator;
}

/* static */
const HdDataSourceLocator &
FabricPhysxVehicleWheelAttachmentSchema::GetWheelFrameOrientationLocator()
{
    static const HdDataSourceLocator locator =
        GetDefaultLocator().Append(
            FabricPhysxVehicleWheelAttachmentSchemaTokens->wheelFrameOrientation);
    return locator;
}

/* static */
const HdDataSourceLocator &
FabricPhysxVehicleWheelAttachmentSchema::GetWheelFramePositionLocator()
{
    static const HdDataSourceLocator locator =
        GetDefaultLocator().Append(
            FabricPhysxVehicleWheelAttachmentSchemaTokens->wheelFramePosition);
    return locator;
} 

PXR_NAMESPACE_CLOSE_SCOPE