//
// Copyright 2023 Pixar
//
// Licensed under the terms set forth in the LICENSE.txt file available at
// https://openusd.org/license.
//
////////////////////////////////////////////////////////////////////////

/* ************************************************************************** */
/* **                                                                      ** */
/* ** This file is generated by a script.                                  ** */
/* **                                                                      ** */
/* ** Do not edit it directly (unless it is within a CUSTOM CODE section)! ** */
/* ** Edit hdSchemaDefs.py instead to make changes.                        ** */
/* **                                                                      ** */
/* ************************************************************************** */

#include "pxr/imaging/fabric/physxTriggerSchema.h"

#include "pxr/imaging/hd/retainedDataSource.h"

#include "pxr/base/trace/trace.h"

// --(BEGIN CUSTOM CODE: Includes)--
// --(END CUSTOM CODE: Includes)--

PXR_NAMESPACE_OPEN_SCOPE

TF_DEFINE_PUBLIC_TOKENS(FabricPhysxTriggerSchemaTokens,
    FABRIC_PHYSX_TRIGGER_SCHEMA_TOKENS);

// --(BEGIN CUSTOM CODE: Schema Methods)--
// --(END CUSTOM CODE: Schema Methods)--

HdTokenDataSourceHandle
FabricPhysxTriggerSchema::GetEnterScriptType() const
{
    return _GetTypedDataSource<HdTokenDataSource>(
        FabricPhysxTriggerSchemaTokens->enterScriptType);
}

HdTokenDataSourceHandle
FabricPhysxTriggerSchema::GetLeaveScriptType() const
{
    return _GetTypedDataSource<HdTokenDataSource>(
        FabricPhysxTriggerSchemaTokens->leaveScriptType);
}

HdTokenDataSourceHandle
FabricPhysxTriggerSchema::GetOnEnterScript() const
{
    return _GetTypedDataSource<HdTokenDataSource>(
        FabricPhysxTriggerSchemaTokens->onEnterScript);
}

HdTokenDataSourceHandle
FabricPhysxTriggerSchema::GetOnLeaveScript() const
{
    return _GetTypedDataSource<HdTokenDataSource>(
        FabricPhysxTriggerSchemaTokens->onLeaveScript);
}

/*static*/
HdContainerDataSourceHandle
FabricPhysxTriggerSchema::BuildRetained(
        const HdTokenDataSourceHandle &enterScriptType,
        const HdTokenDataSourceHandle &leaveScriptType,
        const HdTokenDataSourceHandle &onEnterScript,
        const HdTokenDataSourceHandle &onLeaveScript
)
{
    TfToken _names[4];
    HdDataSourceBaseHandle _values[4];

    size_t _count = 0;

    if (enterScriptType) {
        _names[_count] = FabricPhysxTriggerSchemaTokens->enterScriptType;
        _values[_count++] = enterScriptType;
    }

    if (leaveScriptType) {
        _names[_count] = FabricPhysxTriggerSchemaTokens->leaveScriptType;
        _values[_count++] = leaveScriptType;
    }

    if (onEnterScript) {
        _names[_count] = FabricPhysxTriggerSchemaTokens->onEnterScript;
        _values[_count++] = onEnterScript;
    }

    if (onLeaveScript) {
        _names[_count] = FabricPhysxTriggerSchemaTokens->onLeaveScript;
        _values[_count++] = onLeaveScript;
    }
    return HdRetainedContainerDataSource::New(_count, _names, _values);
}

FabricPhysxTriggerSchema::Builder &
FabricPhysxTriggerSchema::Builder::SetEnterScriptType(
    const HdTokenDataSourceHandle &enterScriptType)
{
    _enterScriptType = enterScriptType;
    return *this;
}

FabricPhysxTriggerSchema::Builder &
FabricPhysxTriggerSchema::Builder::SetLeaveScriptType(
    const HdTokenDataSourceHandle &leaveScriptType)
{
    _leaveScriptType = leaveScriptType;
    return *this;
}

FabricPhysxTriggerSchema::Builder &
FabricPhysxTriggerSchema::Builder::SetOnEnterScript(
    const HdTokenDataSourceHandle &onEnterScript)
{
    _onEnterScript = onEnterScript;
    return *this;
}

FabricPhysxTriggerSchema::Builder &
FabricPhysxTriggerSchema::Builder::SetOnLeaveScript(
    const HdTokenDataSourceHandle &onLeaveScript)
{
    _onLeaveScript = onLeaveScript;
    return *this;
}

HdContainerDataSourceHandle
FabricPhysxTriggerSchema::Builder::Build()
{
    return FabricPhysxTriggerSchema::BuildRetained(
        _enterScriptType,
        _leaveScriptType,
        _onEnterScript,
        _onLeaveScript
    );
}

/*static*/
FabricPhysxTriggerSchema
FabricPhysxTriggerSchema::GetFromParent(
        const HdContainerDataSourceHandle &fromParentContainer)
{
    return FabricPhysxTriggerSchema(
        fromParentContainer
        ? HdContainerDataSource::Cast(fromParentContainer->Get(
                FabricPhysxTriggerSchemaTokens->physxTrigger))
        : nullptr);
}

/*static*/
const TfToken &
FabricPhysxTriggerSchema::GetSchemaToken()
{
    return FabricPhysxTriggerSchemaTokens->physxTrigger;
}

/*static*/
const HdDataSourceLocator &
FabricPhysxTriggerSchema::GetDefaultLocator()
{
    static const HdDataSourceLocator locator(GetSchemaToken());
    return locator;
}

/* static */
const HdDataSourceLocator &
FabricPhysxTriggerSchema::GetEnterScriptTypeLocator()
{
    static const HdDataSourceLocator locator =
        GetDefaultLocator().Append(
            FabricPhysxTriggerSchemaTokens->enterScriptType);
    return locator;
}

/* static */
const HdDataSourceLocator &
FabricPhysxTriggerSchema::GetLeaveScriptTypeLocator()
{
    static const HdDataSourceLocator locator =
        GetDefaultLocator().Append(
            FabricPhysxTriggerSchemaTokens->leaveScriptType);
    return locator;
}

/* static */
const HdDataSourceLocator &
FabricPhysxTriggerSchema::GetOnEnterScriptLocator()
{
    static const HdDataSourceLocator locator =
        GetDefaultLocator().Append(
            FabricPhysxTriggerSchemaTokens->onEnterScript);
    return locator;
}

/* static */
const HdDataSourceLocator &
FabricPhysxTriggerSchema::GetOnLeaveScriptLocator()
{
    static const HdDataSourceLocator locator =
        GetDefaultLocator().Append(
            FabricPhysxTriggerSchemaTokens->onLeaveScript);
    return locator;
} 

PXR_NAMESPACE_CLOSE_SCOPE