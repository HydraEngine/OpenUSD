//
// Copyright 2023 Pixar
//
// Licensed under the terms set forth in the LICENSE.txt file available at
// https://openusd.org/license.
//
////////////////////////////////////////////////////////////////////////

/* ************************************************************************** */
/* **                                                                      ** */
/* ** This file is generated by a script.                                  ** */
/* **                                                                      ** */
/* ** Do not edit it directly (unless it is within a CUSTOM CODE section)! ** */
/* ** Edit hdSchemaDefs.py instead to make changes.                        ** */
/* **                                                                      ** */
/* ************************************************************************** */

#ifndef PXR_IMAGING_HD_PHYSX_VEHICLE_BRAKES_ENTRY_SCHEMA_H
#define PXR_IMAGING_HD_PHYSX_VEHICLE_BRAKES_ENTRY_SCHEMA_H

/// \file

#include "pxr/imaging/hd/api.h"

#include "pxr/imaging/hd/schema.h"

// --(BEGIN CUSTOM CODE: Includes)--
#include "pxr/imaging/hd/physxVehicleBrakesSchema.h"
// --(END CUSTOM CODE: Includes)--

PXR_NAMESPACE_OPEN_SCOPE

// --(BEGIN CUSTOM CODE: Declares)--
// --(END CUSTOM CODE: Declares)--

#define HD_PHYSX_VEHICLE_BRAKES_ENTRY_SCHEMA_TOKENS \
    (physxVehicleBrakesEntry) \
    ((brakes0, "brakes0")) \
    ((brakes1, "brakes1")) \

TF_DECLARE_PUBLIC_TOKENS(HdPhysxVehicleBrakesEntrySchemaTokens, HD_API,
    HD_PHYSX_VEHICLE_BRAKES_ENTRY_SCHEMA_TOKENS);

//-----------------------------------------------------------------------------


class HdPhysxVehicleBrakesEntrySchema : public HdSchema
{
public:
    /// \name Schema retrieval
    /// @{

    HdPhysxVehicleBrakesEntrySchema(HdContainerDataSourceHandle container)
      : HdSchema(container) {}

    /// Retrieves a container data source with the schema's default name token
    /// "physxVehicleBrakesEntry" from the parent container and constructs a
    /// HdPhysxVehicleBrakesEntrySchema instance.
    /// Because the requested container data source may not exist, the result
    /// should be checked with IsDefined() or a bool comparison before use.
    HD_API
    static HdPhysxVehicleBrakesEntrySchema GetFromParent(
        const HdContainerDataSourceHandle &fromParentContainer);

    /// @}

// --(BEGIN CUSTOM CODE: Schema Methods)--
    HD_API
    HdPhysxVehicleBrakesSchema GetBrakes0Binding();

    HD_API
    HdPhysxVehicleBrakesSchema GetBrakes1Binding();

// --(END CUSTOM CODE: Schema Methods)--

    /// \name Member accessor
    /// @{ 

    /// @}

    /// \name Schema location
    /// @{

    /// Returns a token where the container representing this schema is found in
    /// a container by default.
    HD_API
    static const TfToken &GetSchemaToken();

    /// Returns an HdDataSourceLocator (relative to the prim-level data source)
    /// where the container representing this schema is found by default.
    HD_API
    static const HdDataSourceLocator &GetDefaultLocator();

    /// @} 

    /// \name Schema construction
    /// @{

    /// @}
};

PXR_NAMESPACE_CLOSE_SCOPE

#endif