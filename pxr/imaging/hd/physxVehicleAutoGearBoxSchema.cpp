//
// Copyright 2023 Pixar
//
// Licensed under the terms set forth in the LICENSE.txt file available at
// https://openusd.org/license.
//
////////////////////////////////////////////////////////////////////////

/* ************************************************************************** */
/* **                                                                      ** */
/* ** This file is generated by a script.                                  ** */
/* **                                                                      ** */
/* ** Do not edit it directly (unless it is within a CUSTOM CODE section)! ** */
/* ** Edit hdSchemaDefs.py instead to make changes.                        ** */
/* **                                                                      ** */
/* ************************************************************************** */

#include "pxr/imaging/hd/physxVehicleAutoGearBoxSchema.h"

#include "pxr/imaging/hd/retainedDataSource.h"

#include "pxr/base/trace/trace.h"

// --(BEGIN CUSTOM CODE: Includes)--
// --(END CUSTOM CODE: Includes)--

PXR_NAMESPACE_OPEN_SCOPE

TF_DEFINE_PUBLIC_TOKENS(HdPhysxVehicleAutoGearBoxSchemaTokens,
    HD_PHYSX_VEHICLE_AUTO_GEAR_BOX_SCHEMA_TOKENS);

// --(BEGIN CUSTOM CODE: Schema Methods)--
// --(END CUSTOM CODE: Schema Methods)--

HdFloatArrayDataSourceHandle
HdPhysxVehicleAutoGearBoxSchema::GetDownRatios() const
{
    return _GetTypedDataSource<HdFloatArrayDataSource>(
        HdPhysxVehicleAutoGearBoxSchemaTokens->downRatios);
}

HdFloatDataSourceHandle
HdPhysxVehicleAutoGearBoxSchema::GetLatency() const
{
    return _GetTypedDataSource<HdFloatDataSource>(
        HdPhysxVehicleAutoGearBoxSchemaTokens->latency);
}

HdFloatArrayDataSourceHandle
HdPhysxVehicleAutoGearBoxSchema::GetUpRatios() const
{
    return _GetTypedDataSource<HdFloatArrayDataSource>(
        HdPhysxVehicleAutoGearBoxSchemaTokens->upRatios);
}

/*static*/
HdContainerDataSourceHandle
HdPhysxVehicleAutoGearBoxSchema::BuildRetained(
        const HdFloatArrayDataSourceHandle &downRatios,
        const HdFloatDataSourceHandle &latency,
        const HdFloatArrayDataSourceHandle &upRatios
)
{
    TfToken _names[3];
    HdDataSourceBaseHandle _values[3];

    size_t _count = 0;

    if (downRatios) {
        _names[_count] = HdPhysxVehicleAutoGearBoxSchemaTokens->downRatios;
        _values[_count++] = downRatios;
    }

    if (latency) {
        _names[_count] = HdPhysxVehicleAutoGearBoxSchemaTokens->latency;
        _values[_count++] = latency;
    }

    if (upRatios) {
        _names[_count] = HdPhysxVehicleAutoGearBoxSchemaTokens->upRatios;
        _values[_count++] = upRatios;
    }
    return HdRetainedContainerDataSource::New(_count, _names, _values);
}

HdPhysxVehicleAutoGearBoxSchema::Builder &
HdPhysxVehicleAutoGearBoxSchema::Builder::SetDownRatios(
    const HdFloatArrayDataSourceHandle &downRatios)
{
    _downRatios = downRatios;
    return *this;
}

HdPhysxVehicleAutoGearBoxSchema::Builder &
HdPhysxVehicleAutoGearBoxSchema::Builder::SetLatency(
    const HdFloatDataSourceHandle &latency)
{
    _latency = latency;
    return *this;
}

HdPhysxVehicleAutoGearBoxSchema::Builder &
HdPhysxVehicleAutoGearBoxSchema::Builder::SetUpRatios(
    const HdFloatArrayDataSourceHandle &upRatios)
{
    _upRatios = upRatios;
    return *this;
}

HdContainerDataSourceHandle
HdPhysxVehicleAutoGearBoxSchema::Builder::Build()
{
    return HdPhysxVehicleAutoGearBoxSchema::BuildRetained(
        _downRatios,
        _latency,
        _upRatios
    );
}

/*static*/
HdPhysxVehicleAutoGearBoxSchema
HdPhysxVehicleAutoGearBoxSchema::GetFromParent(
        const HdContainerDataSourceHandle &fromParentContainer)
{
    return HdPhysxVehicleAutoGearBoxSchema(
        fromParentContainer
        ? HdContainerDataSource::Cast(fromParentContainer->Get(
                HdPhysxVehicleAutoGearBoxSchemaTokens->physxVehicleAutoGearBox))
        : nullptr);
}

/*static*/
const TfToken &
HdPhysxVehicleAutoGearBoxSchema::GetSchemaToken()
{
    return HdPhysxVehicleAutoGearBoxSchemaTokens->physxVehicleAutoGearBox;
}

/*static*/
const HdDataSourceLocator &
HdPhysxVehicleAutoGearBoxSchema::GetDefaultLocator()
{
    static const HdDataSourceLocator locator(GetSchemaToken());
    return locator;
}

/* static */
const HdDataSourceLocator &
HdPhysxVehicleAutoGearBoxSchema::GetDownRatiosLocator()
{
    static const HdDataSourceLocator locator =
        GetDefaultLocator().Append(
            HdPhysxVehicleAutoGearBoxSchemaTokens->downRatios);
    return locator;
}

/* static */
const HdDataSourceLocator &
HdPhysxVehicleAutoGearBoxSchema::GetLatencyLocator()
{
    static const HdDataSourceLocator locator =
        GetDefaultLocator().Append(
            HdPhysxVehicleAutoGearBoxSchemaTokens->latency);
    return locator;
}

/* static */
const HdDataSourceLocator &
HdPhysxVehicleAutoGearBoxSchema::GetUpRatiosLocator()
{
    static const HdDataSourceLocator locator =
        GetDefaultLocator().Append(
            HdPhysxVehicleAutoGearBoxSchemaTokens->upRatios);
    return locator;
} 

PXR_NAMESPACE_CLOSE_SCOPE