//
// Copyright 2023 Pixar
//
// Licensed under the terms set forth in the LICENSE.txt file available at
// https://openusd.org/license.
//
////////////////////////////////////////////////////////////////////////

/* ************************************************************************** */
/* **                                                                      ** */
/* ** This file is generated by a script.                                  ** */
/* **                                                                      ** */
/* ** Do not edit it directly (unless it is within a CUSTOM CODE section)! ** */
/* ** Edit hdSchemaDefs.py instead to make changes.                        ** */
/* **                                                                      ** */
/* ************************************************************************** */

#include "pxr/imaging/hd/physxMimicJointEntrySchema.h"

#include "pxr/imaging/hd/retainedDataSource.h"

#include "pxr/base/trace/trace.h"

// --(BEGIN CUSTOM CODE: Includes)--
// --(END CUSTOM CODE: Includes)--

PXR_NAMESPACE_OPEN_SCOPE

TF_DEFINE_PUBLIC_TOKENS(HdPhysxMimicJointEntrySchemaTokens, HD_PHYSX_MIMIC_JOINT_ENTRY_SCHEMA_TOKENS);

// --(BEGIN CUSTOM CODE: Schema Methods)--
HdPhysxMimicJointSchema HdPhysxMimicJointEntrySchema::GetRotXBinding() {
    return HdPhysxMimicJointSchema(
            _GetTypedDataSource<HdContainerDataSource>(HdPhysxMimicJointEntrySchemaTokens->rotX));
}

HdPhysxMimicJointSchema HdPhysxMimicJointEntrySchema::GetRotYBinding() {
    return HdPhysxMimicJointSchema(
            _GetTypedDataSource<HdContainerDataSource>(HdPhysxMimicJointEntrySchemaTokens->rotY));
}

HdPhysxMimicJointSchema HdPhysxMimicJointEntrySchema::GetRotZBinding() {
    return HdPhysxMimicJointSchema(
            _GetTypedDataSource<HdContainerDataSource>(HdPhysxMimicJointEntrySchemaTokens->rotZ));
}
// --(END CUSTOM CODE: Schema Methods)--

/*static*/
HdPhysxMimicJointEntrySchema HdPhysxMimicJointEntrySchema::GetFromParent(
        const HdContainerDataSourceHandle &fromParentContainer) {
    return HdPhysxMimicJointEntrySchema(fromParentContainer
                                                ? HdContainerDataSource::Cast(fromParentContainer->Get(
                                                          HdPhysxMimicJointEntrySchemaTokens->physxMimicJointEntry))
                                                : nullptr);
}

/*static*/
const TfToken &HdPhysxMimicJointEntrySchema::GetSchemaToken() {
    return HdPhysxMimicJointEntrySchemaTokens->physxMimicJointEntry;
}

/*static*/
const HdDataSourceLocator &HdPhysxMimicJointEntrySchema::GetDefaultLocator() {
    static const HdDataSourceLocator locator(GetSchemaToken());
    return locator;
}

PXR_NAMESPACE_CLOSE_SCOPE