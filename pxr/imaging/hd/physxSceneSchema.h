//
// Copyright 2023 Pixar
//
// Licensed under the terms set forth in the LICENSE.txt file available at
// https://openusd.org/license.
//
////////////////////////////////////////////////////////////////////////

/* ************************************************************************** */
/* **                                                                      ** */
/* ** This file is generated by a script.                                  ** */
/* **                                                                      ** */
/* ** Do not edit it directly (unless it is within a CUSTOM CODE section)! ** */
/* ** Edit hdSchemaDefs.py instead to make changes.                        ** */
/* **                                                                      ** */
/* ************************************************************************** */

#ifndef PXR_IMAGING_HD_PHYSX_SCENE_SCHEMA_H
#define PXR_IMAGING_HD_PHYSX_SCENE_SCHEMA_H

/// \file

#include "pxr/imaging/hd/api.h"

#include "pxr/imaging/hd/schema.h"

// --(BEGIN CUSTOM CODE: Includes)--
// --(END CUSTOM CODE: Includes)--

PXR_NAMESPACE_OPEN_SCOPE

// --(BEGIN CUSTOM CODE: Declares)--
// --(END CUSTOM CODE: Declares)--

#define HD_PHYSX_SCENE_SCHEMA_TOKENS \
    (physxScene) \
    (bounceThreshold) \
    (broadphaseType) \
    (collisionSystem) \
    (enableCCD) \
    (enableEnhancedDeterminism) \
    (enableExternalForcesEveryIteration) \
    (enableGPUDynamics) \
    (enableResidualReporting) \
    (enableSceneQuerySupport) \
    (enableStabilization) \
    (frictionCorrelationDistance) \
    (frictionOffsetThreshold) \
    (frictionType) \
    (gpuCollisionStackSize) \
    (gpuFoundLostAggregatePairsCapacity) \
    (gpuFoundLostPairsCapacity) \
    (gpuHeapCapacity) \
    (gpuMaxDeformableSurfaceContacts) \
    (gpuMaxHairContacts) \
    (gpuMaxNumPartitions) \
    (gpuMaxParticleContacts) \
    (gpuMaxRigidContactCount) \
    (gpuMaxRigidPatchCount) \
    (gpuMaxSoftBodyContacts) \
    (gpuTempBufferCapacity) \
    (gpuTotalAggregatePairsCapacity) \
    (invertCollisionGroupFilter) \
    (maxBiasCoefficient) \
    (maxPositionIterationCount) \
    (maxVelocityIterationCount) \
    (minPositionIterationCount) \
    (minVelocityIterationCount) \
    (reportKinematicKinematicPairs) \
    (reportKinematicStaticPairs) \
    (solverType) \
    (timeStepsPerSecond) \
    (updateType) \

TF_DECLARE_PUBLIC_TOKENS(HdPhysxSceneSchemaTokens, HD_API,
    HD_PHYSX_SCENE_SCHEMA_TOKENS);

//-----------------------------------------------------------------------------


class HdPhysxSceneSchema : public HdSchema
{
public:
    /// \name Schema retrieval
    /// @{

    HdPhysxSceneSchema(HdContainerDataSourceHandle container)
      : HdSchema(container) {}

    /// Retrieves a container data source with the schema's default name token
    /// "physxScene" from the parent container and constructs a
    /// HdPhysxSceneSchema instance.
    /// Because the requested container data source may not exist, the result
    /// should be checked with IsDefined() or a bool comparison before use.
    HD_API
    static HdPhysxSceneSchema GetFromParent(
        const HdContainerDataSourceHandle &fromParentContainer);

    /// @}

// --(BEGIN CUSTOM CODE: Schema Methods)--
// --(END CUSTOM CODE: Schema Methods)--

    /// \name Member accessor
    /// @{

    HD_API
    HdFloatDataSourceHandle GetBounceThreshold() const;

    HD_API
    HdTokenDataSourceHandle GetBroadphaseType() const;

    HD_API
    HdTokenDataSourceHandle GetCollisionSystem() const;

    HD_API
    HdBoolDataSourceHandle GetEnableCCD() const;

    HD_API
    HdBoolDataSourceHandle GetEnableEnhancedDeterminism() const;

    HD_API
    HdBoolDataSourceHandle GetEnableExternalForcesEveryIteration() const;

    HD_API
    HdBoolDataSourceHandle GetEnableGPUDynamics() const;

    HD_API
    HdBoolDataSourceHandle GetEnableResidualReporting() const;

    HD_API
    HdBoolDataSourceHandle GetEnableSceneQuerySupport() const;

    HD_API
    HdBoolDataSourceHandle GetEnableStabilization() const;

    HD_API
    HdFloatDataSourceHandle GetFrictionCorrelationDistance() const;

    HD_API
    HdFloatDataSourceHandle GetFrictionOffsetThreshold() const;

    HD_API
    HdTokenDataSourceHandle GetFrictionType() const;

    HD_API
    HdIntDataSourceHandle GetGpuCollisionStackSize() const;

    HD_API
    HdIntDataSourceHandle GetGpuFoundLostAggregatePairsCapacity() const;

    HD_API
    HdIntDataSourceHandle GetGpuFoundLostPairsCapacity() const;

    HD_API
    HdIntDataSourceHandle GetGpuHeapCapacity() const;

    HD_API
    HdIntDataSourceHandle GetGpuMaxDeformableSurfaceContacts() const;

    HD_API
    HdIntDataSourceHandle GetGpuMaxHairContacts() const;

    HD_API
    HdIntDataSourceHandle GetGpuMaxNumPartitions() const;

    HD_API
    HdIntDataSourceHandle GetGpuMaxParticleContacts() const;

    HD_API
    HdIntDataSourceHandle GetGpuMaxRigidContactCount() const;

    HD_API
    HdIntDataSourceHandle GetGpuMaxRigidPatchCount() const;

    HD_API
    HdIntDataSourceHandle GetGpuMaxSoftBodyContacts() const;

    HD_API
    HdIntDataSourceHandle GetGpuTempBufferCapacity() const;

    HD_API
    HdIntDataSourceHandle GetGpuTotalAggregatePairsCapacity() const;

    HD_API
    HdBoolDataSourceHandle GetInvertCollisionGroupFilter() const;

    HD_API
    HdFloatDataSourceHandle GetMaxBiasCoefficient() const;

    HD_API
    HdIntDataSourceHandle GetMaxPositionIterationCount() const;

    HD_API
    HdIntDataSourceHandle GetMaxVelocityIterationCount() const;

    HD_API
    HdIntDataSourceHandle GetMinPositionIterationCount() const;

    HD_API
    HdIntDataSourceHandle GetMinVelocityIterationCount() const;

    HD_API
    HdBoolDataSourceHandle GetReportKinematicKinematicPairs() const;

    HD_API
    HdBoolDataSourceHandle GetReportKinematicStaticPairs() const;

    HD_API
    HdTokenDataSourceHandle GetSolverType() const;

    HD_API
    HdIntDataSourceHandle GetTimeStepsPerSecond() const;

    HD_API
    HdTokenDataSourceHandle GetUpdateType() const; 

    /// @}

    /// \name Schema location
    /// @{

    /// Returns a token where the container representing this schema is found in
    /// a container by default.
    HD_API
    static const TfToken &GetSchemaToken();

    /// Returns an HdDataSourceLocator (relative to the prim-level data source)
    /// where the container representing this schema is found by default.
    HD_API
    static const HdDataSourceLocator &GetDefaultLocator();

    /// @}

    /// \name Data source locators for members
    ///
    /// The following methods return an HdDataSourceLocator (relative to the
    /// prim-level data source) where the data source for a member can be found.
    ///
    /// This is often useful for checking intersection against the
    /// HdDataSourceLocatorSet sent with HdDataSourceObserver::PrimsDirtied.
    /// @{

    /// Prim-level relative data source locator to locate bounceThreshold.
    HD_API
    static const HdDataSourceLocator &GetBounceThresholdLocator();

    /// Prim-level relative data source locator to locate broadphaseType.
    HD_API
    static const HdDataSourceLocator &GetBroadphaseTypeLocator();

    /// Prim-level relative data source locator to locate collisionSystem.
    HD_API
    static const HdDataSourceLocator &GetCollisionSystemLocator();

    /// Prim-level relative data source locator to locate enableCCD.
    HD_API
    static const HdDataSourceLocator &GetEnableCCDLocator();

    /// Prim-level relative data source locator to locate enableEnhancedDeterminism.
    HD_API
    static const HdDataSourceLocator &GetEnableEnhancedDeterminismLocator();

    /// Prim-level relative data source locator to locate enableExternalForcesEveryIteration.
    HD_API
    static const HdDataSourceLocator &GetEnableExternalForcesEveryIterationLocator();

    /// Prim-level relative data source locator to locate enableGPUDynamics.
    HD_API
    static const HdDataSourceLocator &GetEnableGPUDynamicsLocator();

    /// Prim-level relative data source locator to locate enableResidualReporting.
    HD_API
    static const HdDataSourceLocator &GetEnableResidualReportingLocator();

    /// Prim-level relative data source locator to locate enableSceneQuerySupport.
    HD_API
    static const HdDataSourceLocator &GetEnableSceneQuerySupportLocator();

    /// Prim-level relative data source locator to locate enableStabilization.
    HD_API
    static const HdDataSourceLocator &GetEnableStabilizationLocator();

    /// Prim-level relative data source locator to locate frictionCorrelationDistance.
    HD_API
    static const HdDataSourceLocator &GetFrictionCorrelationDistanceLocator();

    /// Prim-level relative data source locator to locate frictionOffsetThreshold.
    HD_API
    static const HdDataSourceLocator &GetFrictionOffsetThresholdLocator();

    /// Prim-level relative data source locator to locate frictionType.
    HD_API
    static const HdDataSourceLocator &GetFrictionTypeLocator();

    /// Prim-level relative data source locator to locate gpuCollisionStackSize.
    HD_API
    static const HdDataSourceLocator &GetGpuCollisionStackSizeLocator();

    /// Prim-level relative data source locator to locate gpuFoundLostAggregatePairsCapacity.
    HD_API
    static const HdDataSourceLocator &GetGpuFoundLostAggregatePairsCapacityLocator();

    /// Prim-level relative data source locator to locate gpuFoundLostPairsCapacity.
    HD_API
    static const HdDataSourceLocator &GetGpuFoundLostPairsCapacityLocator();

    /// Prim-level relative data source locator to locate gpuHeapCapacity.
    HD_API
    static const HdDataSourceLocator &GetGpuHeapCapacityLocator();

    /// Prim-level relative data source locator to locate gpuMaxDeformableSurfaceContacts.
    HD_API
    static const HdDataSourceLocator &GetGpuMaxDeformableSurfaceContactsLocator();

    /// Prim-level relative data source locator to locate gpuMaxHairContacts.
    HD_API
    static const HdDataSourceLocator &GetGpuMaxHairContactsLocator();

    /// Prim-level relative data source locator to locate gpuMaxNumPartitions.
    HD_API
    static const HdDataSourceLocator &GetGpuMaxNumPartitionsLocator();

    /// Prim-level relative data source locator to locate gpuMaxParticleContacts.
    HD_API
    static const HdDataSourceLocator &GetGpuMaxParticleContactsLocator();

    /// Prim-level relative data source locator to locate gpuMaxRigidContactCount.
    HD_API
    static const HdDataSourceLocator &GetGpuMaxRigidContactCountLocator();

    /// Prim-level relative data source locator to locate gpuMaxRigidPatchCount.
    HD_API
    static const HdDataSourceLocator &GetGpuMaxRigidPatchCountLocator();

    /// Prim-level relative data source locator to locate gpuMaxSoftBodyContacts.
    HD_API
    static const HdDataSourceLocator &GetGpuMaxSoftBodyContactsLocator();

    /// Prim-level relative data source locator to locate gpuTempBufferCapacity.
    HD_API
    static const HdDataSourceLocator &GetGpuTempBufferCapacityLocator();

    /// Prim-level relative data source locator to locate gpuTotalAggregatePairsCapacity.
    HD_API
    static const HdDataSourceLocator &GetGpuTotalAggregatePairsCapacityLocator();

    /// Prim-level relative data source locator to locate invertCollisionGroupFilter.
    HD_API
    static const HdDataSourceLocator &GetInvertCollisionGroupFilterLocator();

    /// Prim-level relative data source locator to locate maxBiasCoefficient.
    HD_API
    static const HdDataSourceLocator &GetMaxBiasCoefficientLocator();

    /// Prim-level relative data source locator to locate maxPositionIterationCount.
    HD_API
    static const HdDataSourceLocator &GetMaxPositionIterationCountLocator();

    /// Prim-level relative data source locator to locate maxVelocityIterationCount.
    HD_API
    static const HdDataSourceLocator &GetMaxVelocityIterationCountLocator();

    /// Prim-level relative data source locator to locate minPositionIterationCount.
    HD_API
    static const HdDataSourceLocator &GetMinPositionIterationCountLocator();

    /// Prim-level relative data source locator to locate minVelocityIterationCount.
    HD_API
    static const HdDataSourceLocator &GetMinVelocityIterationCountLocator();

    /// Prim-level relative data source locator to locate reportKinematicKinematicPairs.
    HD_API
    static const HdDataSourceLocator &GetReportKinematicKinematicPairsLocator();

    /// Prim-level relative data source locator to locate reportKinematicStaticPairs.
    HD_API
    static const HdDataSourceLocator &GetReportKinematicStaticPairsLocator();

    /// Prim-level relative data source locator to locate solverType.
    HD_API
    static const HdDataSourceLocator &GetSolverTypeLocator();

    /// Prim-level relative data source locator to locate timeStepsPerSecond.
    HD_API
    static const HdDataSourceLocator &GetTimeStepsPerSecondLocator();

    /// Prim-level relative data source locator to locate updateType.
    HD_API
    static const HdDataSourceLocator &GetUpdateTypeLocator();
    /// @} 

    /// \name Schema construction
    /// @{

    /// \deprecated Use Builder instead.
    ///
    /// Builds a container data source which includes the provided child data
    /// sources. Parameters with nullptr values are excluded. This is a
    /// low-level interface. For cases in which it's desired to define
    /// the container with a sparse set of child fields, the Builder class
    /// is often more convenient and readable.
    HD_API
    static HdContainerDataSourceHandle
    BuildRetained(
        const HdFloatDataSourceHandle &bounceThreshold,
        const HdTokenDataSourceHandle &broadphaseType,
        const HdTokenDataSourceHandle &collisionSystem,
        const HdBoolDataSourceHandle &enableCCD,
        const HdBoolDataSourceHandle &enableEnhancedDeterminism,
        const HdBoolDataSourceHandle &enableExternalForcesEveryIteration,
        const HdBoolDataSourceHandle &enableGPUDynamics,
        const HdBoolDataSourceHandle &enableResidualReporting,
        const HdBoolDataSourceHandle &enableSceneQuerySupport,
        const HdBoolDataSourceHandle &enableStabilization,
        const HdFloatDataSourceHandle &frictionCorrelationDistance,
        const HdFloatDataSourceHandle &frictionOffsetThreshold,
        const HdTokenDataSourceHandle &frictionType,
        const HdIntDataSourceHandle &gpuCollisionStackSize,
        const HdIntDataSourceHandle &gpuFoundLostAggregatePairsCapacity,
        const HdIntDataSourceHandle &gpuFoundLostPairsCapacity,
        const HdIntDataSourceHandle &gpuHeapCapacity,
        const HdIntDataSourceHandle &gpuMaxDeformableSurfaceContacts,
        const HdIntDataSourceHandle &gpuMaxHairContacts,
        const HdIntDataSourceHandle &gpuMaxNumPartitions,
        const HdIntDataSourceHandle &gpuMaxParticleContacts,
        const HdIntDataSourceHandle &gpuMaxRigidContactCount,
        const HdIntDataSourceHandle &gpuMaxRigidPatchCount,
        const HdIntDataSourceHandle &gpuMaxSoftBodyContacts,
        const HdIntDataSourceHandle &gpuTempBufferCapacity,
        const HdIntDataSourceHandle &gpuTotalAggregatePairsCapacity,
        const HdBoolDataSourceHandle &invertCollisionGroupFilter,
        const HdFloatDataSourceHandle &maxBiasCoefficient,
        const HdIntDataSourceHandle &maxPositionIterationCount,
        const HdIntDataSourceHandle &maxVelocityIterationCount,
        const HdIntDataSourceHandle &minPositionIterationCount,
        const HdIntDataSourceHandle &minVelocityIterationCount,
        const HdBoolDataSourceHandle &reportKinematicKinematicPairs,
        const HdBoolDataSourceHandle &reportKinematicStaticPairs,
        const HdTokenDataSourceHandle &solverType,
        const HdIntDataSourceHandle &timeStepsPerSecond,
        const HdTokenDataSourceHandle &updateType
    );

    /// \class HdPhysxSceneSchema::Builder
    /// 
    /// Utility class for setting sparse sets of child data source fields to be
    /// filled as arguments into BuildRetained. Because all setter methods
    /// return a reference to the instance, this can be used in the "builder
    /// pattern" form.
    class Builder
    {
    public:
        HD_API
        Builder &SetBounceThreshold(
            const HdFloatDataSourceHandle &bounceThreshold);
        HD_API
        Builder &SetBroadphaseType(
            const HdTokenDataSourceHandle &broadphaseType);
        HD_API
        Builder &SetCollisionSystem(
            const HdTokenDataSourceHandle &collisionSystem);
        HD_API
        Builder &SetEnableCCD(
            const HdBoolDataSourceHandle &enableCCD);
        HD_API
        Builder &SetEnableEnhancedDeterminism(
            const HdBoolDataSourceHandle &enableEnhancedDeterminism);
        HD_API
        Builder &SetEnableExternalForcesEveryIteration(
            const HdBoolDataSourceHandle &enableExternalForcesEveryIteration);
        HD_API
        Builder &SetEnableGPUDynamics(
            const HdBoolDataSourceHandle &enableGPUDynamics);
        HD_API
        Builder &SetEnableResidualReporting(
            const HdBoolDataSourceHandle &enableResidualReporting);
        HD_API
        Builder &SetEnableSceneQuerySupport(
            const HdBoolDataSourceHandle &enableSceneQuerySupport);
        HD_API
        Builder &SetEnableStabilization(
            const HdBoolDataSourceHandle &enableStabilization);
        HD_API
        Builder &SetFrictionCorrelationDistance(
            const HdFloatDataSourceHandle &frictionCorrelationDistance);
        HD_API
        Builder &SetFrictionOffsetThreshold(
            const HdFloatDataSourceHandle &frictionOffsetThreshold);
        HD_API
        Builder &SetFrictionType(
            const HdTokenDataSourceHandle &frictionType);
        HD_API
        Builder &SetGpuCollisionStackSize(
            const HdIntDataSourceHandle &gpuCollisionStackSize);
        HD_API
        Builder &SetGpuFoundLostAggregatePairsCapacity(
            const HdIntDataSourceHandle &gpuFoundLostAggregatePairsCapacity);
        HD_API
        Builder &SetGpuFoundLostPairsCapacity(
            const HdIntDataSourceHandle &gpuFoundLostPairsCapacity);
        HD_API
        Builder &SetGpuHeapCapacity(
            const HdIntDataSourceHandle &gpuHeapCapacity);
        HD_API
        Builder &SetGpuMaxDeformableSurfaceContacts(
            const HdIntDataSourceHandle &gpuMaxDeformableSurfaceContacts);
        HD_API
        Builder &SetGpuMaxHairContacts(
            const HdIntDataSourceHandle &gpuMaxHairContacts);
        HD_API
        Builder &SetGpuMaxNumPartitions(
            const HdIntDataSourceHandle &gpuMaxNumPartitions);
        HD_API
        Builder &SetGpuMaxParticleContacts(
            const HdIntDataSourceHandle &gpuMaxParticleContacts);
        HD_API
        Builder &SetGpuMaxRigidContactCount(
            const HdIntDataSourceHandle &gpuMaxRigidContactCount);
        HD_API
        Builder &SetGpuMaxRigidPatchCount(
            const HdIntDataSourceHandle &gpuMaxRigidPatchCount);
        HD_API
        Builder &SetGpuMaxSoftBodyContacts(
            const HdIntDataSourceHandle &gpuMaxSoftBodyContacts);
        HD_API
        Builder &SetGpuTempBufferCapacity(
            const HdIntDataSourceHandle &gpuTempBufferCapacity);
        HD_API
        Builder &SetGpuTotalAggregatePairsCapacity(
            const HdIntDataSourceHandle &gpuTotalAggregatePairsCapacity);
        HD_API
        Builder &SetInvertCollisionGroupFilter(
            const HdBoolDataSourceHandle &invertCollisionGroupFilter);
        HD_API
        Builder &SetMaxBiasCoefficient(
            const HdFloatDataSourceHandle &maxBiasCoefficient);
        HD_API
        Builder &SetMaxPositionIterationCount(
            const HdIntDataSourceHandle &maxPositionIterationCount);
        HD_API
        Builder &SetMaxVelocityIterationCount(
            const HdIntDataSourceHandle &maxVelocityIterationCount);
        HD_API
        Builder &SetMinPositionIterationCount(
            const HdIntDataSourceHandle &minPositionIterationCount);
        HD_API
        Builder &SetMinVelocityIterationCount(
            const HdIntDataSourceHandle &minVelocityIterationCount);
        HD_API
        Builder &SetReportKinematicKinematicPairs(
            const HdBoolDataSourceHandle &reportKinematicKinematicPairs);
        HD_API
        Builder &SetReportKinematicStaticPairs(
            const HdBoolDataSourceHandle &reportKinematicStaticPairs);
        HD_API
        Builder &SetSolverType(
            const HdTokenDataSourceHandle &solverType);
        HD_API
        Builder &SetTimeStepsPerSecond(
            const HdIntDataSourceHandle &timeStepsPerSecond);
        HD_API
        Builder &SetUpdateType(
            const HdTokenDataSourceHandle &updateType);

        /// Returns a container data source containing the members set thus far.
        HD_API
        HdContainerDataSourceHandle Build();

    private:
        HdFloatDataSourceHandle _bounceThreshold;
        HdTokenDataSourceHandle _broadphaseType;
        HdTokenDataSourceHandle _collisionSystem;
        HdBoolDataSourceHandle _enableCCD;
        HdBoolDataSourceHandle _enableEnhancedDeterminism;
        HdBoolDataSourceHandle _enableExternalForcesEveryIteration;
        HdBoolDataSourceHandle _enableGPUDynamics;
        HdBoolDataSourceHandle _enableResidualReporting;
        HdBoolDataSourceHandle _enableSceneQuerySupport;
        HdBoolDataSourceHandle _enableStabilization;
        HdFloatDataSourceHandle _frictionCorrelationDistance;
        HdFloatDataSourceHandle _frictionOffsetThreshold;
        HdTokenDataSourceHandle _frictionType;
        HdIntDataSourceHandle _gpuCollisionStackSize;
        HdIntDataSourceHandle _gpuFoundLostAggregatePairsCapacity;
        HdIntDataSourceHandle _gpuFoundLostPairsCapacity;
        HdIntDataSourceHandle _gpuHeapCapacity;
        HdIntDataSourceHandle _gpuMaxDeformableSurfaceContacts;
        HdIntDataSourceHandle _gpuMaxHairContacts;
        HdIntDataSourceHandle _gpuMaxNumPartitions;
        HdIntDataSourceHandle _gpuMaxParticleContacts;
        HdIntDataSourceHandle _gpuMaxRigidContactCount;
        HdIntDataSourceHandle _gpuMaxRigidPatchCount;
        HdIntDataSourceHandle _gpuMaxSoftBodyContacts;
        HdIntDataSourceHandle _gpuTempBufferCapacity;
        HdIntDataSourceHandle _gpuTotalAggregatePairsCapacity;
        HdBoolDataSourceHandle _invertCollisionGroupFilter;
        HdFloatDataSourceHandle _maxBiasCoefficient;
        HdIntDataSourceHandle _maxPositionIterationCount;
        HdIntDataSourceHandle _maxVelocityIterationCount;
        HdIntDataSourceHandle _minPositionIterationCount;
        HdIntDataSourceHandle _minVelocityIterationCount;
        HdBoolDataSourceHandle _reportKinematicKinematicPairs;
        HdBoolDataSourceHandle _reportKinematicStaticPairs;
        HdTokenDataSourceHandle _solverType;
        HdIntDataSourceHandle _timeStepsPerSecond;
        HdTokenDataSourceHandle _updateType;

    };

    /// @}
};

PXR_NAMESPACE_CLOSE_SCOPE

#endif