//
// Copyright 2023 Pixar
//
// Licensed under the terms set forth in the LICENSE.txt file available at
// https://openusd.org/license.
//
////////////////////////////////////////////////////////////////////////

/* ************************************************************************** */
/* **                                                                      ** */
/* ** This file is generated by a script.                                  ** */
/* **                                                                      ** */
/* ** Do not edit it directly (unless it is within a CUSTOM CODE section)! ** */
/* ** Edit hdSchemaDefs.py instead to make changes.                        ** */
/* **                                                                      ** */
/* ************************************************************************** */

#ifndef PXR_IMAGING_HD_PHYSX_VEHICLE_SCHEMA_H
#define PXR_IMAGING_HD_PHYSX_VEHICLE_SCHEMA_H

/// \file

#include "pxr/imaging/hd/api.h"

#include "pxr/imaging/hd/schema.h"

// --(BEGIN CUSTOM CODE: Includes)--
// --(END CUSTOM CODE: Includes)--

PXR_NAMESPACE_OPEN_SCOPE

// --(BEGIN CUSTOM CODE: Declares)--
// --(END CUSTOM CODE: Declares)--

#define HD_PHYSX_VEHICLE_SCHEMA_TOKENS \
    (physxVehicle) \
    (highForwardSpeedSubStepCount) \
    (lateralStickyTireDamping) \
    (lateralStickyTireThresholdSpeed) \
    (lateralStickyTireThresholdTime) \
    (limitSuspensionExpansionVelocity) \
    (longitudinalStickyTireDamping) \
    (longitudinalStickyTireThresholdSpeed) \
    (longitudinalStickyTireThresholdTime) \
    (lowForwardSpeedSubStepCount) \
    (minActiveLongitudinalSlipDenominator) \
    (minLateralSlipDenominator) \
    (minPassiveLongitudinalSlipDenominator) \
    (subStepThresholdLongitudinalSpeed) \
    (suspensionLineQueryType) \
    (vehicleEnabled) \

TF_DECLARE_PUBLIC_TOKENS(HdPhysxVehicleSchemaTokens, HD_API,
    HD_PHYSX_VEHICLE_SCHEMA_TOKENS);

//-----------------------------------------------------------------------------


class HdPhysxVehicleSchema : public HdSchema
{
public:
    /// \name Schema retrieval
    /// @{

    HdPhysxVehicleSchema(HdContainerDataSourceHandle container)
      : HdSchema(container) {}

    /// Retrieves a container data source with the schema's default name token
    /// "physxVehicle" from the parent container and constructs a
    /// HdPhysxVehicleSchema instance.
    /// Because the requested container data source may not exist, the result
    /// should be checked with IsDefined() or a bool comparison before use.
    HD_API
    static HdPhysxVehicleSchema GetFromParent(
        const HdContainerDataSourceHandle &fromParentContainer);

    /// @}

// --(BEGIN CUSTOM CODE: Schema Methods)--
// --(END CUSTOM CODE: Schema Methods)--

    /// \name Member accessor
    /// @{

    HD_API
    HdIntDataSourceHandle GetHighForwardSpeedSubStepCount() const;

    HD_API
    HdFloatDataSourceHandle GetLateralStickyTireDamping() const;

    HD_API
    HdFloatDataSourceHandle GetLateralStickyTireThresholdSpeed() const;

    HD_API
    HdFloatDataSourceHandle GetLateralStickyTireThresholdTime() const;

    HD_API
    HdBoolDataSourceHandle GetLimitSuspensionExpansionVelocity() const;

    HD_API
    HdFloatDataSourceHandle GetLongitudinalStickyTireDamping() const;

    HD_API
    HdFloatDataSourceHandle GetLongitudinalStickyTireThresholdSpeed() const;

    HD_API
    HdFloatDataSourceHandle GetLongitudinalStickyTireThresholdTime() const;

    HD_API
    HdIntDataSourceHandle GetLowForwardSpeedSubStepCount() const;

    HD_API
    HdFloatDataSourceHandle GetMinActiveLongitudinalSlipDenominator() const;

    HD_API
    HdFloatDataSourceHandle GetMinLateralSlipDenominator() const;

    HD_API
    HdFloatDataSourceHandle GetMinPassiveLongitudinalSlipDenominator() const;

    HD_API
    HdFloatDataSourceHandle GetSubStepThresholdLongitudinalSpeed() const;

    HD_API
    HdTokenDataSourceHandle GetSuspensionLineQueryType() const;

    HD_API
    HdBoolDataSourceHandle GetVehicleEnabled() const; 

    /// @}

    /// \name Schema location
    /// @{

    /// Returns a token where the container representing this schema is found in
    /// a container by default.
    HD_API
    static const TfToken &GetSchemaToken();

    /// Returns an HdDataSourceLocator (relative to the prim-level data source)
    /// where the container representing this schema is found by default.
    HD_API
    static const HdDataSourceLocator &GetDefaultLocator();

    /// @}

    /// \name Data source locators for members
    ///
    /// The following methods return an HdDataSourceLocator (relative to the
    /// prim-level data source) where the data source for a member can be found.
    ///
    /// This is often useful for checking intersection against the
    /// HdDataSourceLocatorSet sent with HdDataSourceObserver::PrimsDirtied.
    /// @{

    /// Prim-level relative data source locator to locate highForwardSpeedSubStepCount.
    HD_API
    static const HdDataSourceLocator &GetHighForwardSpeedSubStepCountLocator();

    /// Prim-level relative data source locator to locate lateralStickyTireDamping.
    HD_API
    static const HdDataSourceLocator &GetLateralStickyTireDampingLocator();

    /// Prim-level relative data source locator to locate lateralStickyTireThresholdSpeed.
    HD_API
    static const HdDataSourceLocator &GetLateralStickyTireThresholdSpeedLocator();

    /// Prim-level relative data source locator to locate lateralStickyTireThresholdTime.
    HD_API
    static const HdDataSourceLocator &GetLateralStickyTireThresholdTimeLocator();

    /// Prim-level relative data source locator to locate limitSuspensionExpansionVelocity.
    HD_API
    static const HdDataSourceLocator &GetLimitSuspensionExpansionVelocityLocator();

    /// Prim-level relative data source locator to locate longitudinalStickyTireDamping.
    HD_API
    static const HdDataSourceLocator &GetLongitudinalStickyTireDampingLocator();

    /// Prim-level relative data source locator to locate longitudinalStickyTireThresholdSpeed.
    HD_API
    static const HdDataSourceLocator &GetLongitudinalStickyTireThresholdSpeedLocator();

    /// Prim-level relative data source locator to locate longitudinalStickyTireThresholdTime.
    HD_API
    static const HdDataSourceLocator &GetLongitudinalStickyTireThresholdTimeLocator();

    /// Prim-level relative data source locator to locate lowForwardSpeedSubStepCount.
    HD_API
    static const HdDataSourceLocator &GetLowForwardSpeedSubStepCountLocator();

    /// Prim-level relative data source locator to locate minActiveLongitudinalSlipDenominator.
    HD_API
    static const HdDataSourceLocator &GetMinActiveLongitudinalSlipDenominatorLocator();

    /// Prim-level relative data source locator to locate minLateralSlipDenominator.
    HD_API
    static const HdDataSourceLocator &GetMinLateralSlipDenominatorLocator();

    /// Prim-level relative data source locator to locate minPassiveLongitudinalSlipDenominator.
    HD_API
    static const HdDataSourceLocator &GetMinPassiveLongitudinalSlipDenominatorLocator();

    /// Prim-level relative data source locator to locate subStepThresholdLongitudinalSpeed.
    HD_API
    static const HdDataSourceLocator &GetSubStepThresholdLongitudinalSpeedLocator();

    /// Prim-level relative data source locator to locate suspensionLineQueryType.
    HD_API
    static const HdDataSourceLocator &GetSuspensionLineQueryTypeLocator();

    /// Prim-level relative data source locator to locate vehicleEnabled.
    HD_API
    static const HdDataSourceLocator &GetVehicleEnabledLocator();
    /// @} 

    /// \name Schema construction
    /// @{

    /// \deprecated Use Builder instead.
    ///
    /// Builds a container data source which includes the provided child data
    /// sources. Parameters with nullptr values are excluded. This is a
    /// low-level interface. For cases in which it's desired to define
    /// the container with a sparse set of child fields, the Builder class
    /// is often more convenient and readable.
    HD_API
    static HdContainerDataSourceHandle
    BuildRetained(
        const HdIntDataSourceHandle &highForwardSpeedSubStepCount,
        const HdFloatDataSourceHandle &lateralStickyTireDamping,
        const HdFloatDataSourceHandle &lateralStickyTireThresholdSpeed,
        const HdFloatDataSourceHandle &lateralStickyTireThresholdTime,
        const HdBoolDataSourceHandle &limitSuspensionExpansionVelocity,
        const HdFloatDataSourceHandle &longitudinalStickyTireDamping,
        const HdFloatDataSourceHandle &longitudinalStickyTireThresholdSpeed,
        const HdFloatDataSourceHandle &longitudinalStickyTireThresholdTime,
        const HdIntDataSourceHandle &lowForwardSpeedSubStepCount,
        const HdFloatDataSourceHandle &minActiveLongitudinalSlipDenominator,
        const HdFloatDataSourceHandle &minLateralSlipDenominator,
        const HdFloatDataSourceHandle &minPassiveLongitudinalSlipDenominator,
        const HdFloatDataSourceHandle &subStepThresholdLongitudinalSpeed,
        const HdTokenDataSourceHandle &suspensionLineQueryType,
        const HdBoolDataSourceHandle &vehicleEnabled
    );

    /// \class HdPhysxVehicleSchema::Builder
    /// 
    /// Utility class for setting sparse sets of child data source fields to be
    /// filled as arguments into BuildRetained. Because all setter methods
    /// return a reference to the instance, this can be used in the "builder
    /// pattern" form.
    class Builder
    {
    public:
        HD_API
        Builder &SetHighForwardSpeedSubStepCount(
            const HdIntDataSourceHandle &highForwardSpeedSubStepCount);
        HD_API
        Builder &SetLateralStickyTireDamping(
            const HdFloatDataSourceHandle &lateralStickyTireDamping);
        HD_API
        Builder &SetLateralStickyTireThresholdSpeed(
            const HdFloatDataSourceHandle &lateralStickyTireThresholdSpeed);
        HD_API
        Builder &SetLateralStickyTireThresholdTime(
            const HdFloatDataSourceHandle &lateralStickyTireThresholdTime);
        HD_API
        Builder &SetLimitSuspensionExpansionVelocity(
            const HdBoolDataSourceHandle &limitSuspensionExpansionVelocity);
        HD_API
        Builder &SetLongitudinalStickyTireDamping(
            const HdFloatDataSourceHandle &longitudinalStickyTireDamping);
        HD_API
        Builder &SetLongitudinalStickyTireThresholdSpeed(
            const HdFloatDataSourceHandle &longitudinalStickyTireThresholdSpeed);
        HD_API
        Builder &SetLongitudinalStickyTireThresholdTime(
            const HdFloatDataSourceHandle &longitudinalStickyTireThresholdTime);
        HD_API
        Builder &SetLowForwardSpeedSubStepCount(
            const HdIntDataSourceHandle &lowForwardSpeedSubStepCount);
        HD_API
        Builder &SetMinActiveLongitudinalSlipDenominator(
            const HdFloatDataSourceHandle &minActiveLongitudinalSlipDenominator);
        HD_API
        Builder &SetMinLateralSlipDenominator(
            const HdFloatDataSourceHandle &minLateralSlipDenominator);
        HD_API
        Builder &SetMinPassiveLongitudinalSlipDenominator(
            const HdFloatDataSourceHandle &minPassiveLongitudinalSlipDenominator);
        HD_API
        Builder &SetSubStepThresholdLongitudinalSpeed(
            const HdFloatDataSourceHandle &subStepThresholdLongitudinalSpeed);
        HD_API
        Builder &SetSuspensionLineQueryType(
            const HdTokenDataSourceHandle &suspensionLineQueryType);
        HD_API
        Builder &SetVehicleEnabled(
            const HdBoolDataSourceHandle &vehicleEnabled);

        /// Returns a container data source containing the members set thus far.
        HD_API
        HdContainerDataSourceHandle Build();

    private:
        HdIntDataSourceHandle _highForwardSpeedSubStepCount;
        HdFloatDataSourceHandle _lateralStickyTireDamping;
        HdFloatDataSourceHandle _lateralStickyTireThresholdSpeed;
        HdFloatDataSourceHandle _lateralStickyTireThresholdTime;
        HdBoolDataSourceHandle _limitSuspensionExpansionVelocity;
        HdFloatDataSourceHandle _longitudinalStickyTireDamping;
        HdFloatDataSourceHandle _longitudinalStickyTireThresholdSpeed;
        HdFloatDataSourceHandle _longitudinalStickyTireThresholdTime;
        HdIntDataSourceHandle _lowForwardSpeedSubStepCount;
        HdFloatDataSourceHandle _minActiveLongitudinalSlipDenominator;
        HdFloatDataSourceHandle _minLateralSlipDenominator;
        HdFloatDataSourceHandle _minPassiveLongitudinalSlipDenominator;
        HdFloatDataSourceHandle _subStepThresholdLongitudinalSpeed;
        HdTokenDataSourceHandle _suspensionLineQueryType;
        HdBoolDataSourceHandle _vehicleEnabled;

    };

    /// @}
};

PXR_NAMESPACE_CLOSE_SCOPE

#endif