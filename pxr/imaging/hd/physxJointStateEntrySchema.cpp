//
// Copyright 2023 Pixar
//
// Licensed under the terms set forth in the LICENSE.txt file available at
// https://openusd.org/license.
//
////////////////////////////////////////////////////////////////////////

/* ************************************************************************** */
/* **                                                                      ** */
/* ** This file is generated by a script.                                  ** */
/* **                                                                      ** */
/* ** Do not edit it directly (unless it is within a CUSTOM CODE section)! ** */
/* ** Edit hdSchemaDefs.py instead to make changes.                        ** */
/* **                                                                      ** */
/* ************************************************************************** */

#include "pxr/imaging/hd/physxJointStateEntrySchema.h"

#include "pxr/imaging/hd/retainedDataSource.h"

#include "pxr/base/trace/trace.h"

// --(BEGIN CUSTOM CODE: Includes)--
// --(END CUSTOM CODE: Includes)--

PXR_NAMESPACE_OPEN_SCOPE

TF_DEFINE_PUBLIC_TOKENS(HdPhysxJointStateEntrySchemaTokens,
    HD_PHYSX_JOINT_STATE_ENTRY_SCHEMA_TOKENS);

// --(BEGIN CUSTOM CODE: Schema Methods)--
HdPhysxJointStateSchema HdPhysxJointStateEntrySchema::GetTransXBinding() {
    return HdPhysxJointStateSchema(_GetTypedDataSource<HdContainerDataSource>(HdPhysxJointStateEntrySchemaTokens->transX));
}

HdPhysxJointStateSchema HdPhysxJointStateEntrySchema::GetTransYBinding() {
    return HdPhysxJointStateSchema(_GetTypedDataSource<HdContainerDataSource>(HdPhysxJointStateEntrySchemaTokens->transY));
}

HdPhysxJointStateSchema HdPhysxJointStateEntrySchema::GetTransZBinding() {
    return HdPhysxJointStateSchema(_GetTypedDataSource<HdContainerDataSource>(HdPhysxJointStateEntrySchemaTokens->transZ));
}

HdPhysxJointStateSchema HdPhysxJointStateEntrySchema::GetRotXBinding() {
    return HdPhysxJointStateSchema(_GetTypedDataSource<HdContainerDataSource>(HdPhysxJointStateEntrySchemaTokens->rotX));
}

HdPhysxJointStateSchema HdPhysxJointStateEntrySchema::GetRotYBinding() {
    return HdPhysxJointStateSchema(_GetTypedDataSource<HdContainerDataSource>(HdPhysxJointStateEntrySchemaTokens->rotY));
}

HdPhysxJointStateSchema HdPhysxJointStateEntrySchema::GetRotZBinding() {
    return HdPhysxJointStateSchema(_GetTypedDataSource<HdContainerDataSource>(HdPhysxJointStateEntrySchemaTokens->rotZ));
}
// --(END CUSTOM CODE: Schema Methods)--

/*static*/
HdPhysxJointStateEntrySchema
HdPhysxJointStateEntrySchema::GetFromParent(
        const HdContainerDataSourceHandle &fromParentContainer)
{
    return HdPhysxJointStateEntrySchema(
        fromParentContainer
        ? HdContainerDataSource::Cast(fromParentContainer->Get(
                HdPhysxJointStateEntrySchemaTokens->physxJointStateEntry))
        : nullptr);
}

/*static*/
const TfToken &
HdPhysxJointStateEntrySchema::GetSchemaToken()
{
    return HdPhysxJointStateEntrySchemaTokens->physxJointStateEntry;
}

/*static*/
const HdDataSourceLocator &
HdPhysxJointStateEntrySchema::GetDefaultLocator()
{
    static const HdDataSourceLocator locator(GetSchemaToken());
    return locator;
} 

PXR_NAMESPACE_CLOSE_SCOPE