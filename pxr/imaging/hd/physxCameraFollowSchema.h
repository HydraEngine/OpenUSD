//
// Copyright 2023 Pixar
//
// Licensed under the terms set forth in the LICENSE.txt file available at
// https://openusd.org/license.
//
////////////////////////////////////////////////////////////////////////

/* ************************************************************************** */
/* **                                                                      ** */
/* ** This file is generated by a script.                                  ** */
/* **                                                                      ** */
/* ** Do not edit it directly (unless it is within a CUSTOM CODE section)! ** */
/* ** Edit hdSchemaDefs.py instead to make changes.                        ** */
/* **                                                                      ** */
/* ************************************************************************** */

#ifndef PXR_IMAGING_HD_PHYSX_CAMERA_FOLLOW_SCHEMA_H
#define PXR_IMAGING_HD_PHYSX_CAMERA_FOLLOW_SCHEMA_H

/// \file

#include "pxr/imaging/hd/api.h"

#include "pxr/imaging/hd/schema.h"

// --(BEGIN CUSTOM CODE: Includes)--
// --(END CUSTOM CODE: Includes)--

PXR_NAMESPACE_OPEN_SCOPE

// --(BEGIN CUSTOM CODE: Declares)--
// --(END CUSTOM CODE: Declares)--

#define HD_PHYSX_CAMERA_FOLLOW_SCHEMA_TOKENS \
    (physxCameraFollow) \
    (cameraPositionTimeConstant) \
    (followMaxDistance) \
    (followMaxSpeed) \
    (followMinDistance) \
    (followMinSpeed) \
    (followTurnRateGain) \
    (lookAheadMaxDistance) \
    (lookAheadMaxSpeed) \
    (lookAheadMinDistance) \
    (lookAheadMinSpeed) \
    (lookAheadTurnRateGain) \
    (lookPositionHeight) \
    (lookPositionTimeConstant) \
    (pitchAngle) \
    (pitchAngleTimeConstant) \
    (positionOffset) \
    (slowPitchAngleSpeed) \
    (slowSpeedPitchAngleScale) \
    (velocityNormalMinSpeed) \
    (yawAngle) \
    (yawRateTimeConstant) \

TF_DECLARE_PUBLIC_TOKENS(HdPhysxCameraFollowSchemaTokens, HD_API,
    HD_PHYSX_CAMERA_FOLLOW_SCHEMA_TOKENS);

//-----------------------------------------------------------------------------


class HdPhysxCameraFollowSchema : public HdSchema
{
public:
    /// \name Schema retrieval
    /// @{

    HdPhysxCameraFollowSchema(HdContainerDataSourceHandle container)
      : HdSchema(container) {}

    /// Retrieves a container data source with the schema's default name token
    /// "physxCameraFollow" from the parent container and constructs a
    /// HdPhysxCameraFollowSchema instance.
    /// Because the requested container data source may not exist, the result
    /// should be checked with IsDefined() or a bool comparison before use.
    HD_API
    static HdPhysxCameraFollowSchema GetFromParent(
        const HdContainerDataSourceHandle &fromParentContainer);

    /// @}

// --(BEGIN CUSTOM CODE: Schema Methods)--
// --(END CUSTOM CODE: Schema Methods)--

    /// \name Member accessor
    /// @{

    HD_API
    HdVec3fDataSourceHandle GetCameraPositionTimeConstant() const;

    HD_API
    HdFloatDataSourceHandle GetFollowMaxDistance() const;

    HD_API
    HdFloatDataSourceHandle GetFollowMaxSpeed() const;

    HD_API
    HdFloatDataSourceHandle GetFollowMinDistance() const;

    HD_API
    HdFloatDataSourceHandle GetFollowMinSpeed() const;

    HD_API
    HdFloatDataSourceHandle GetFollowTurnRateGain() const;

    HD_API
    HdFloatDataSourceHandle GetLookAheadMaxDistance() const;

    HD_API
    HdFloatDataSourceHandle GetLookAheadMaxSpeed() const;

    HD_API
    HdFloatDataSourceHandle GetLookAheadMinDistance() const;

    HD_API
    HdFloatDataSourceHandle GetLookAheadMinSpeed() const;

    HD_API
    HdFloatDataSourceHandle GetLookAheadTurnRateGain() const;

    HD_API
    HdFloatDataSourceHandle GetLookPositionHeight() const;

    HD_API
    HdFloatDataSourceHandle GetLookPositionTimeConstant() const;

    HD_API
    HdFloatDataSourceHandle GetPitchAngle() const;

    HD_API
    HdFloatDataSourceHandle GetPitchAngleTimeConstant() const;

    HD_API
    HdVec3fDataSourceHandle GetPositionOffset() const;

    HD_API
    HdFloatDataSourceHandle GetSlowPitchAngleSpeed() const;

    HD_API
    HdFloatDataSourceHandle GetSlowSpeedPitchAngleScale() const;

    HD_API
    HdFloatDataSourceHandle GetVelocityNormalMinSpeed() const;

    HD_API
    HdFloatDataSourceHandle GetYawAngle() const;

    HD_API
    HdFloatDataSourceHandle GetYawRateTimeConstant() const; 

    /// @}

    /// \name Schema location
    /// @{

    /// Returns a token where the container representing this schema is found in
    /// a container by default.
    HD_API
    static const TfToken &GetSchemaToken();

    /// Returns an HdDataSourceLocator (relative to the prim-level data source)
    /// where the container representing this schema is found by default.
    HD_API
    static const HdDataSourceLocator &GetDefaultLocator();

    /// @}

    /// \name Data source locators for members
    ///
    /// The following methods return an HdDataSourceLocator (relative to the
    /// prim-level data source) where the data source for a member can be found.
    ///
    /// This is often useful for checking intersection against the
    /// HdDataSourceLocatorSet sent with HdDataSourceObserver::PrimsDirtied.
    /// @{

    /// Prim-level relative data source locator to locate cameraPositionTimeConstant.
    HD_API
    static const HdDataSourceLocator &GetCameraPositionTimeConstantLocator();

    /// Prim-level relative data source locator to locate followMaxDistance.
    HD_API
    static const HdDataSourceLocator &GetFollowMaxDistanceLocator();

    /// Prim-level relative data source locator to locate followMaxSpeed.
    HD_API
    static const HdDataSourceLocator &GetFollowMaxSpeedLocator();

    /// Prim-level relative data source locator to locate followMinDistance.
    HD_API
    static const HdDataSourceLocator &GetFollowMinDistanceLocator();

    /// Prim-level relative data source locator to locate followMinSpeed.
    HD_API
    static const HdDataSourceLocator &GetFollowMinSpeedLocator();

    /// Prim-level relative data source locator to locate followTurnRateGain.
    HD_API
    static const HdDataSourceLocator &GetFollowTurnRateGainLocator();

    /// Prim-level relative data source locator to locate lookAheadMaxDistance.
    HD_API
    static const HdDataSourceLocator &GetLookAheadMaxDistanceLocator();

    /// Prim-level relative data source locator to locate lookAheadMaxSpeed.
    HD_API
    static const HdDataSourceLocator &GetLookAheadMaxSpeedLocator();

    /// Prim-level relative data source locator to locate lookAheadMinDistance.
    HD_API
    static const HdDataSourceLocator &GetLookAheadMinDistanceLocator();

    /// Prim-level relative data source locator to locate lookAheadMinSpeed.
    HD_API
    static const HdDataSourceLocator &GetLookAheadMinSpeedLocator();

    /// Prim-level relative data source locator to locate lookAheadTurnRateGain.
    HD_API
    static const HdDataSourceLocator &GetLookAheadTurnRateGainLocator();

    /// Prim-level relative data source locator to locate lookPositionHeight.
    HD_API
    static const HdDataSourceLocator &GetLookPositionHeightLocator();

    /// Prim-level relative data source locator to locate lookPositionTimeConstant.
    HD_API
    static const HdDataSourceLocator &GetLookPositionTimeConstantLocator();

    /// Prim-level relative data source locator to locate pitchAngle.
    HD_API
    static const HdDataSourceLocator &GetPitchAngleLocator();

    /// Prim-level relative data source locator to locate pitchAngleTimeConstant.
    HD_API
    static const HdDataSourceLocator &GetPitchAngleTimeConstantLocator();

    /// Prim-level relative data source locator to locate positionOffset.
    HD_API
    static const HdDataSourceLocator &GetPositionOffsetLocator();

    /// Prim-level relative data source locator to locate slowPitchAngleSpeed.
    HD_API
    static const HdDataSourceLocator &GetSlowPitchAngleSpeedLocator();

    /// Prim-level relative data source locator to locate slowSpeedPitchAngleScale.
    HD_API
    static const HdDataSourceLocator &GetSlowSpeedPitchAngleScaleLocator();

    /// Prim-level relative data source locator to locate velocityNormalMinSpeed.
    HD_API
    static const HdDataSourceLocator &GetVelocityNormalMinSpeedLocator();

    /// Prim-level relative data source locator to locate yawAngle.
    HD_API
    static const HdDataSourceLocator &GetYawAngleLocator();

    /// Prim-level relative data source locator to locate yawRateTimeConstant.
    HD_API
    static const HdDataSourceLocator &GetYawRateTimeConstantLocator();
    /// @} 

    /// \name Schema construction
    /// @{

    /// \deprecated Use Builder instead.
    ///
    /// Builds a container data source which includes the provided child data
    /// sources. Parameters with nullptr values are excluded. This is a
    /// low-level interface. For cases in which it's desired to define
    /// the container with a sparse set of child fields, the Builder class
    /// is often more convenient and readable.
    HD_API
    static HdContainerDataSourceHandle
    BuildRetained(
        const HdVec3fDataSourceHandle &cameraPositionTimeConstant,
        const HdFloatDataSourceHandle &followMaxDistance,
        const HdFloatDataSourceHandle &followMaxSpeed,
        const HdFloatDataSourceHandle &followMinDistance,
        const HdFloatDataSourceHandle &followMinSpeed,
        const HdFloatDataSourceHandle &followTurnRateGain,
        const HdFloatDataSourceHandle &lookAheadMaxDistance,
        const HdFloatDataSourceHandle &lookAheadMaxSpeed,
        const HdFloatDataSourceHandle &lookAheadMinDistance,
        const HdFloatDataSourceHandle &lookAheadMinSpeed,
        const HdFloatDataSourceHandle &lookAheadTurnRateGain,
        const HdFloatDataSourceHandle &lookPositionHeight,
        const HdFloatDataSourceHandle &lookPositionTimeConstant,
        const HdFloatDataSourceHandle &pitchAngle,
        const HdFloatDataSourceHandle &pitchAngleTimeConstant,
        const HdVec3fDataSourceHandle &positionOffset,
        const HdFloatDataSourceHandle &slowPitchAngleSpeed,
        const HdFloatDataSourceHandle &slowSpeedPitchAngleScale,
        const HdFloatDataSourceHandle &velocityNormalMinSpeed,
        const HdFloatDataSourceHandle &yawAngle,
        const HdFloatDataSourceHandle &yawRateTimeConstant
    );

    /// \class HdPhysxCameraFollowSchema::Builder
    /// 
    /// Utility class for setting sparse sets of child data source fields to be
    /// filled as arguments into BuildRetained. Because all setter methods
    /// return a reference to the instance, this can be used in the "builder
    /// pattern" form.
    class Builder
    {
    public:
        HD_API
        Builder &SetCameraPositionTimeConstant(
            const HdVec3fDataSourceHandle &cameraPositionTimeConstant);
        HD_API
        Builder &SetFollowMaxDistance(
            const HdFloatDataSourceHandle &followMaxDistance);
        HD_API
        Builder &SetFollowMaxSpeed(
            const HdFloatDataSourceHandle &followMaxSpeed);
        HD_API
        Builder &SetFollowMinDistance(
            const HdFloatDataSourceHandle &followMinDistance);
        HD_API
        Builder &SetFollowMinSpeed(
            const HdFloatDataSourceHandle &followMinSpeed);
        HD_API
        Builder &SetFollowTurnRateGain(
            const HdFloatDataSourceHandle &followTurnRateGain);
        HD_API
        Builder &SetLookAheadMaxDistance(
            const HdFloatDataSourceHandle &lookAheadMaxDistance);
        HD_API
        Builder &SetLookAheadMaxSpeed(
            const HdFloatDataSourceHandle &lookAheadMaxSpeed);
        HD_API
        Builder &SetLookAheadMinDistance(
            const HdFloatDataSourceHandle &lookAheadMinDistance);
        HD_API
        Builder &SetLookAheadMinSpeed(
            const HdFloatDataSourceHandle &lookAheadMinSpeed);
        HD_API
        Builder &SetLookAheadTurnRateGain(
            const HdFloatDataSourceHandle &lookAheadTurnRateGain);
        HD_API
        Builder &SetLookPositionHeight(
            const HdFloatDataSourceHandle &lookPositionHeight);
        HD_API
        Builder &SetLookPositionTimeConstant(
            const HdFloatDataSourceHandle &lookPositionTimeConstant);
        HD_API
        Builder &SetPitchAngle(
            const HdFloatDataSourceHandle &pitchAngle);
        HD_API
        Builder &SetPitchAngleTimeConstant(
            const HdFloatDataSourceHandle &pitchAngleTimeConstant);
        HD_API
        Builder &SetPositionOffset(
            const HdVec3fDataSourceHandle &positionOffset);
        HD_API
        Builder &SetSlowPitchAngleSpeed(
            const HdFloatDataSourceHandle &slowPitchAngleSpeed);
        HD_API
        Builder &SetSlowSpeedPitchAngleScale(
            const HdFloatDataSourceHandle &slowSpeedPitchAngleScale);
        HD_API
        Builder &SetVelocityNormalMinSpeed(
            const HdFloatDataSourceHandle &velocityNormalMinSpeed);
        HD_API
        Builder &SetYawAngle(
            const HdFloatDataSourceHandle &yawAngle);
        HD_API
        Builder &SetYawRateTimeConstant(
            const HdFloatDataSourceHandle &yawRateTimeConstant);

        /// Returns a container data source containing the members set thus far.
        HD_API
        HdContainerDataSourceHandle Build();

    private:
        HdVec3fDataSourceHandle _cameraPositionTimeConstant;
        HdFloatDataSourceHandle _followMaxDistance;
        HdFloatDataSourceHandle _followMaxSpeed;
        HdFloatDataSourceHandle _followMinDistance;
        HdFloatDataSourceHandle _followMinSpeed;
        HdFloatDataSourceHandle _followTurnRateGain;
        HdFloatDataSourceHandle _lookAheadMaxDistance;
        HdFloatDataSourceHandle _lookAheadMaxSpeed;
        HdFloatDataSourceHandle _lookAheadMinDistance;
        HdFloatDataSourceHandle _lookAheadMinSpeed;
        HdFloatDataSourceHandle _lookAheadTurnRateGain;
        HdFloatDataSourceHandle _lookPositionHeight;
        HdFloatDataSourceHandle _lookPositionTimeConstant;
        HdFloatDataSourceHandle _pitchAngle;
        HdFloatDataSourceHandle _pitchAngleTimeConstant;
        HdVec3fDataSourceHandle _positionOffset;
        HdFloatDataSourceHandle _slowPitchAngleSpeed;
        HdFloatDataSourceHandle _slowSpeedPitchAngleScale;
        HdFloatDataSourceHandle _velocityNormalMinSpeed;
        HdFloatDataSourceHandle _yawAngle;
        HdFloatDataSourceHandle _yawRateTimeConstant;

    };

    /// @}
};

PXR_NAMESPACE_CLOSE_SCOPE

#endif